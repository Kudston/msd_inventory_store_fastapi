# Use postgres/example user/password credentials
version: '3.1'

services:
  inventory_system_frontend:
    container_name: inventory_system_frontend
    image: inventory_system_frontend
    restart: unless-stopped

    build:
      context: ./../src/frontend
      dockerfile: Dockerfile

    volumes:
      - ./../src/frontend:/app

    ports:
      - 3000:3000

    command: nohup npm start > outputs.log 2>&1 &

    depends_on:
      - inventory_system_api

  inventory_system_api:
    container_name: inventory_system_api
    image: inventory_system_api
    restart: unless-stopped
    ports:
      - 8000:8500 # ssl
    build: 
      context: ./../src/backends
      dockerfile: Dockerfile

    volumes:
      - ./../src/backends:/usr/src/inventory_system_backends

    command: uvicorn main:app --reload --port 8500 --host 0.0.0.0 --ssl-keyfile ./ssl/key.pem --ssl-certfile ./ssl/cert.pem

    environment:
      - APP_NAME=inventory_system
      - db_name=inventory_system
      - db_user=inventory_system
      - db_password=inventory_system_password
      - db_host=inventory_db
      - db_port=5432

      - ADMIN_USER_NAME=msd_superuser
      - ADMIN_PASSWORD=mds_super_password

    depends_on:
      - inventory_db

  inventory_db:
    container_name: inventory_db
    image: postgres:latest
    restart: always
    volumes:
      - ./../msd_db_mount_location/:/var/lib/postgresql/data

    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=inventory_system_password
      - POSTGRES_USER=inventory_system
    
networks:
  default:
    external: true
    name: inventory_system_network
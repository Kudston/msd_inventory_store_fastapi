{"ast":null,"code":"var _jsxFileName = \"/home/kudston/projects/msd_dominioms_frontend/src/components/CartEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { API_URLS } from '../config/apiConfig';\nimport CartItems from './CartItemsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CartEdit() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    accessToken\n  } = useAuth();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    if (accessToken) {\n      fetch(`${API_URLS.GET_CART}/?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      }).then(response => response.json()).then(data => setItems(data['orders'])).catch(error => console.error('Error fetching stock:', error));\n    }\n  }, [accessToken, id]);\n\n  //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //       const response = await fetch(`${API_URLS.EDIT_STOCKS}/${id}`, {\n  //         method: 'PUT',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //           'Authorization': `Bearer ${accessToken}`\n  //         },\n  //         body: JSON.stringify(cart)\n  //       });\n  //       if (response.ok) {\n  //         navigate('/products');\n  //       } else {\n  //         throw new Error('Failed to update stock');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error updating stock:', error);\n  //       alert('Failed to update stock. Please try again.');\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 col-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Cart Detail: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CartItems, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Update Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary ms-2\",\n      onClick: () => navigate('/products'),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(CartEdit, \"k74q/5FLt/tzETmV/L1qoMU06BY=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = CartEdit;\nexport default CartEdit;\nvar _c;\n$RefreshReg$(_c, \"CartEdit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","API_URLS","CartItems","jsxDEV","_jsxDEV","CartEdit","_s","id","navigate","accessToken","items","setItems","fetch","GET_CART","headers","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/home/kudston/projects/msd_dominioms_frontend/src/components/CartEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { API_URLS } from '../config/apiConfig';\nimport CartItems from './CartItemsList';\n\nfunction CartEdit() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { accessToken } = useAuth();\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    if (accessToken) {\n      fetch(`${API_URLS.GET_CART}/?id=${id}`, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      })\n        .then(response => response.json())\n        .then(data => setItems(data['orders']))\n        .catch(error => console.error('Error fetching stock:', error));\n    }\n  }, [accessToken, id]);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(`${API_URLS.EDIT_STOCKS}/${id}`, {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${accessToken}`\n//         },\n//         body: JSON.stringify(cart)\n//       });\n//       if (response.ok) {\n//         navigate('/products');\n//       } else {\n//         throw new Error('Failed to update stock');\n//       }\n//     } catch (error) {\n//       console.error('Error updating stock:', error);\n//       alert('Failed to update stock. Please try again.');\n//     }\n//   };\n\n  return (\n    <div className=\"container mt-4 col-5\">\n      <h2>Cart Detail: {id}</h2>\n        <div>\n            <CartItems items={ items } />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Update Stock</button>\n        <button type=\"button\" className=\"btn btn-secondary ms-2\" onClick={() => navigate('/products')}>Cancel</button>\n    </div>\n  );\n}\n\nexport default CartEdit;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAY,CAAC,GAAGT,OAAO,CAAC,CAAC;EACjC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIY,WAAW,EAAE;MACfG,KAAK,CAAC,GAAGX,QAAQ,CAACY,QAAQ,QAAQN,EAAE,EAAE,EAAE;QACtCO,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,WAAW;QACxC;MACF,CAAC,CAAC,CACCM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CACtCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IAClE;EACF,CAAC,EAAE,CAACX,WAAW,EAAEF,EAAE,CAAC,CAAC;;EAEvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACEH,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCnB,OAAA;MAAAmB,QAAA,GAAI,eAAa,EAAChB,EAAE;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBvB,OAAA;MAAAmB,QAAA,eACInB,OAAA,CAACF,SAAS;QAACQ,KAAK,EAAGA;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACNvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvEvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,wBAAwB;MAACO,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,WAAW,CAAE;MAAAe,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7G,CAAC;AAEV;AAACrB,EAAA,CAnDQD,QAAQ;EAAA,QACAP,SAAS,EACPC,WAAW,EACJC,OAAO;AAAA;AAAA8B,EAAA,GAHxBzB,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
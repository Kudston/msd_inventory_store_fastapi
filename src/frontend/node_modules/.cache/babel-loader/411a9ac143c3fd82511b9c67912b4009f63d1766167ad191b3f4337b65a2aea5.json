{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { API_URLS } from '../config/apiConfig';\nfunction CartCreate() {\n  _s();\n  const [id, setId] = useState();\n  const navigate = useNavigate();\n  const {\n    accessToken\n  } = useAuth();\n  useEffect(() => {\n    if (accessToken) {\n      fetch(`${API_URLS.CREATE_CART}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      }).then(response => response.json()).then(data => {\n        setId(data['id']);\n        console.log(id);\n        navigate(`/cart-edit/${id}`);\n      }).catch(error => console.error('Error fetching stock:', error));\n    }\n  }, [accessToken]);\n}\n_s(CartCreate, \"ncjqoDHgHj0y/rPsqHENJyXfbnw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CartCreate;\nexport default CartCreate;\nvar _c;\n$RefreshReg$(_c, \"CartCreate\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","API_URLS","CartCreate","_s","id","setId","navigate","accessToken","fetch","CREATE_CART","method","headers","then","response","json","data","console","log","catch","error","_c","$RefreshReg$"],"sources":["/home/kudston/projects/msd_dominioms_frontend/src/components/NewOrder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { API_URLS } from '../config/apiConfig';\n\nfunction CartCreate() {\n  const [id, setId] = useState();\n  const navigate = useNavigate();\n  const { accessToken } = useAuth();\n\n  useEffect(() => {\n    if (accessToken) {\n      fetch(`${API_URLS.CREATE_CART}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      })\n        .then(response => response.json())\n        .then(data => {\n            setId(data['id']);\n            console.log(id);\n            navigate(`/cart-edit/${id}`);\n        })\n        .catch(error => console.error('Error fetching stock:', error));\n    }\n  }, [accessToken]);\n\n}\n\nexport default CartCreate;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,QAAQ,qBAAqB;AAE9C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAY,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEjCH,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,EAAE;MACfC,KAAK,CAAC,GAAGP,QAAQ,CAACQ,WAAW,EAAE,EAAE;QAC/BC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUJ,WAAW;QACxC;MACF,CAAC,CAAC,CACCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVV,KAAK,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;QACjBC,OAAO,CAACC,GAAG,CAACb,EAAE,CAAC;QACfE,QAAQ,CAAC,cAAcF,EAAE,EAAE,CAAC;MAChC,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IAClE;EACF,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;AAEnB;AAACJ,EAAA,CAvBQD,UAAU;EAAA,QAEAH,WAAW,EACJC,OAAO;AAAA;AAAAoB,EAAA,GAHxBlB,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}